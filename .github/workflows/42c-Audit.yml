name: 42Crunch Security Audit in CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    build:
        runs-on: ubuntu-latest

        env:
            platformUrl: 'https://trials.42crunch.com/'
            X42C_API_TOKEN: ${{ secrets.API_KEY }}
        steps:
          #checkout the code
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Debug - List repository contents
            run: |
              echo "=== Repository Contents ==="
              ls -la
              echo ""
              echo "=== Looking for OpenAPI/Swagger files ==="
              find . -name "*.yaml" -o -name "*.yml" -o -name "*.json" | head -20
              echo ""
              echo "=== Current working directory ==="
              pwd
              echo ""
              echo "=== Environment variables ==="
              echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
              echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
              echo ""
              echo "=== Checking specific files ==="
              if [ -f "metadata_management_api.yaml" ]; then
                echo "✅ metadata_management_api.yaml exists"
                echo "File size: $(wc -c < metadata_management_api.yaml) bytes"
                echo "First few lines:"
                head -5 metadata_management_api.yaml
              else
                echo "❌ metadata_management_api.yaml not found"
              fi
              if [ -f "bundled_openapi_spec.json" ]; then
                echo "✅ bundled_openapi_spec.json exists"
                echo "File size: $(wc -c < bundled_openapi_spec.json) bytes"
              else
                echo "❌ bundled_openapi_spec.json not found"
              fi

          - name: 42Crunch REST API Static Security Testing
          # You may pin to the exact commit or the version.
          # uses: 42Crunch/api-security-audit-action@8f3291aee67d774baf12330d1bfe86af2c861a06
            uses: 42Crunch/api-security-audit-action@v3
            continue-on-error: true
            id: audit-action
            with:
              # The API token to access 42Crunch Platform.
              api-token: ${{ env.X42C_API_TOKEN }}
              # Minimum score for OpenAPI files.
              # min-score: # optional, default is 75
              # 42Crunch platform URL
              platform-url: ${{ env.platformUrl }}
              # Log level, one of: FATAL, ERROR, WARN, INFO, DEBUG
              # log-level: # optional, default is INFO
              # Share new API collections with everyone, one of: OFF, READ_ONLY, READ_WRITE
              # share-everyone: # optional, default is OFF
              # GitHub token for uploading results to Github Code Scanning
              # github-token: # optional, default is ${{ github.token }}
              # Upload results to Github Code Scanning
              # upload-to-code-scanning: # optional, default is false
              # If set to 'true', disables all local failure conditions (like minimum score) and fails execution only if the criteria defined in SQGs are not met.
              ignore-failures: false # optional, default is false
              # Set the root directory for the plugin
              # root-directory: # optional
              # Change the default collection name
              # default-collection-name: # optional
              # Writes Audit report in JSON format to a specified file
              json-report: audit-action-report-${{ github.run_id }}.json
              # List of tags to be set on the newly created APIs. Format "category1:name1 category2:name2", optional.
              api-tags: "SecurityQualityGatesTags:API_Catalogue"
              # If set to 'true', forces to complete execution successfully even if a network error has occurred (such as a failure to connect to 4unch Platform, etc).
              # ignore-network-errors: # optional, default is false
              # If set to 'true', forces to complete execution successfully even if the failures conditions (like min-score or SQG criteria) you have set are met.
              # skip-local-checks: # optional, default is false
              # Writes SARIF report to a specified file
              # sarif-report: # optional, default is 
              # Set the maximum timeout (in seconds) for the audit report. Fail if the result isn't ready within that interval.
              # audit-timeout: # optional

          - name: Debug - Check 42Crunch outputs
            if: always()
            run: |
              echo "=== 42Crunch Action Result ==="
              echo "Action outcome: ${{ steps.audit-action.outcome }}"
              echo "Action conclusion: ${{ steps.audit-action.conclusion }}"
              echo ""
              echo "=== Generated files ==="
              ls -la *.json *.sarif 2>/dev/null || echo "No JSON or SARIF files found"
              echo ""
              echo "=== Working directory contents after 42Crunch ==="
              ls -la
              echo ""
              if [ -f "audit-action-report-${{ github.run_id }}.json" ]; then
                echo "✅ JSON report generated"
                echo "JSON report size: $(wc -c < audit-action-report-${{ github.run_id }}.json) bytes"
                echo "First 500 characters of JSON report:"
                head -c 500 "audit-action-report-${{ github.run_id }}.json"
              else
                echo "❌ JSON report not found"
              fi
              echo ""
              echo "=== API Token Status ==="
              if [ -n "${{ env.X42C_API_TOKEN }}" ]; then
                echo "✅ API token is set (length: ${#X42C_API_TOKEN})"
              else
                echo "❌ API token is not set"
              fi
